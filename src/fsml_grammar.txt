
start = fsm

ws "whitespace" = [ \t\n\r]*

fsm "fsm" = st:(state)* { return st; }

initial = "initial"

state "state" = init:(initial ws {return true;})? "state" ws name:id ws "{" ws tr:transitionwrapper* ws "}" ws { return new State(name,init,tr);}

transition = i:input ac:action? ns:transTo? ";" {return new Transition(i,ac,ns);}

transitionwrapper = tr:transition ws? {return tr;}

id = letters:[a-z]i+ { return letters.join(""); }

input = letters:[a-z]i+ { return letters.join(""); }

action = "/" ac:id+{return ac.join("");}

transTo = ws? "->" ws? name:id { return name; }